@book{bass2013software,
	title        = {Software Architecture in Practice},
	author       = {Bass, Len and Clements, Paul and Kazman, Rick},
	year         = 2012,
	month        = {September},
	publisher    = {Addison-Wesley Professional},
	isbn         = 9780132942799,
	edition      = 3,
	annotate     = {This book is a staple of the field. Most courses on software architecture follow this book as a reference. The book is quite terse and academic which will require a strong will to complete. Rather than focusing on specific architecture patterns as in Richards \& Ford, this book provides tactics to achieve each quality attribute which can be used to design new architectures}
}
@book{bass2021software,
	title        = {Software Architecture in Practice},
	author       = {Bass, Len and Clements, Paul and Kazman, Rick},
	year         = 2021,
	month        = {August},
	publisher    = {Addison-Wesley},
	isbn         = 9780136886099,
	edition      = 4,
	annotate     = {This book is a staple of the field. Most courses on software architecture follow this book as a reference. The book is quite terse and academic which will require a strong will to complete. Rather than focusing on specific architecture patterns as in Richards \& Ford, this book provides tactics to achieve each quality attribute which can be used to design new architectures}
}
@book{clements2010documenting,
author = {Garlan, David and Bachmann, Felix and Ivers, James and Stafford, Judith and Bass, Len and Clements, Paul and Merson, Paulo},
title = {Documenting Software Architectures: Views and Beyond},
year = {2010},
isbn = {0321552687},
publisher = {Addison-Wesley Professional},
edition = {2nd},
abstract = {This new edition is brighter, shinier, more complete, more pragmatic, more focused than the previous one, and I wouldnt have thought it possible to improve on the original. As the field of software architecture has grown over these past decades, there is much more to be said, much more that we know, and much more that we can reflect upon of whats worked and what hasntand the authors here do all that, and more. From the Foreword by Grady Booch, IBM Fellow Software architecturethe conceptual glue that holds every phase of a project together for its many stakeholdersis widely recognized as a critical element in modern software development. Practitioners have increasingly discovered that close attention to a software systems architecture pays valuable dividends. Without an architecture that is appropriate for the problem being solved, a project will stumble along or, most likely, fail. Even with a superb architecture, if that architecture is not well understood or well communicated the project is unlikely to succeed. Documenting Software Architectures, Second Edition, provides the most complete and current guidance, independent of language or notation, on how to capture an architecture in a commonly understandable form. Drawing on their extensive experience, the authors first help you decide what information to document, and then, with guidelines and examples (in various notations, including UML), show you how to express an architecture so that others can successfully build, use, and maintain a system from it. The book features rules for sound documentation, the goals and strategies of documentation, architectural views and styles, documentation for software interfaces and software behavior, and templates for capturing and organizing information to generate a coherent package. New and improved in this second edition: Coverage of architectural styles such as service-oriented architectures, multi-tier architectures, and data modelsGuidance for documentation in an Agile development environmentDeeper treatment of documentation of rationale, reflecting best industrial practicesImproved templates, reflecting years of use and feedback, and more documentation layout optionsA new, comprehensive example (available online), featuring documentation of a Web-based service-oriented systemReference guides for three important architecture documentation languages: UML, AADL, and SySML}
}
@book{richards2020fundamentals,
	title        = {Fundamentals of Software Architecture: An Engineering Approach},
	author       = {Richards, Mark and Ford, Neal},
	year         = 2020,
	month        = {January},
	publisher    = {O'Reilly Media, Inc.},
	isbn         = 9781492043454,
	annotate     = {This is a recent book (2020) which begins in part one by introducing the responsibilities of a software architecture, followed by some guiding principles for architectures. In part two, the book enumerates many of the architectures introduced in this course with good descriptions for later reference. Finally the book returns to the soft skills required for a career in software architecting.}
}
@book{newman2015building,
	title        = {Building Microservices},
	author       = {Newman, Sam},
	year         = 2015,
	month        = {February},
	publisher    = {O'Reilly Media, Inc.},
	isbn         = 9781491950357,
	annotate     = {A book focused on introducing the various practical tools and processes required to successfully manage the complexity of a microservices architecture.}
}
@book{brown2022c4,
	title        = {Software Architecture for Developers - Volume 2},
	author       = {Brown, Simon},
	year         = 2022,
	month        = {January},
	publisher    = {Leanpub},
	note		= {\url{https://leanpub.com/visualising-software-architecture}},
	annotate	= {This book focusses on the visual communication and documentation of software architecture, based upon a collection of ideas and techniques that thousands of people across the world have found useful. The core of this is Simon's C4 software architecture model and the software guidebook. You'll also find discussion about notation, the various uses for diagrams, the value of creating a model and tooling, and documentation.}
}
@book{kruchten2004rational,
	title={The Rational Unified Process: An Introduction},
	author={Kruchten, Philippe},
	year={2004},
	publisher={Addison-Wesley Professional}
}
@book{psychprog,
	author = {Weinberg, Gerald M.},
	title = {The  Psychology of Computer Programming},
	year = {1985},
	isbn = {0442292643},
	publisher = {John Wiley \& Sons, Inc.},
	address = {USA},
	abstract = {From the Publisher:This landmark 1971 classic is reprinted with new commentary and a Preface from the author. Long regarded as one of the first books to pioneer a people-oriented approach to computing,  The Psychology of Computer Programming  endures as a penetrating analysis of the intelligence, skill, teamwork, and problem-solving power of the computer programmer. Returning to topics that are strikingly relevant to today's issues in programming, Gerald M. Weinberg provides a characteristically fresh perspective on his original insights, highlighting the similarities and differences between now and then. Using a conversational style that invites the reader to join him, Weinberg reunites with some of his most enduring, straight-from-the-heart observations on the human side of software engineering. Dorset House Publishing is proud to make this important text available to new generations of Weinberg fans â€” and to encourage readers of the first edition to return to its valuable lessons.}
}
@book{web-application-security,
      author = {Hoffman, Andrew},
	  title = {Web Application Security: Exploration and Countermeasures for Modern Web Applications},
	  year = {2020},
	  isbn = {9781492053118},
	  publisher = {O'Reilly Media, Inc.},
}
@book{ rasd2007,
	author = { Maciaszek, Leszek A. },
	title = { Requirements Analysis and System Design },
	edition = { 3rd ed. },
	isbn = { 9780321440365 0321440366 },
	publisher = { Addison-Wesley Harlow },
	pages = { xxxvii, 612 p. : },
	year = { 2007 },
	type = { Book },
	language = { English },
	subjects = { Object-oriented methods (Computer science); Computer software -- Development.; UML (Computer science); System design. },
	life-dates = { 2007 -  },
	catalogue-url = { https://nla.gov.au/nla.cat-vn4222701 },
}