// Software Architecture notes
@inproceedings{wicked-architecture,
author = {Galster, Matthias and Angelov, Samuil},
title = {What Makes Teaching Software Architecture Difficult?},
year = {2016},
isbn = {9781450342056},
publisher = {Association for Computing Machinery},
url = {https://doi.org/10.1145/2889160.2889187},
doi = {10.1145/2889160.2889187},
booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
pages = {356-359},
numpages = {4},
keywords = {education, learners, training, software architecture, students},
location = {Austin, Texas},
series = {ICSE '16},
annotate = {An article which attempts to enumerate the reasons why teaching software architecture is hard. They coin the term `wicked architecture` to explain the imprecise nature of software architecture that students struggle with.}
}

// Security notes
@misc{security-principles,
author = {Eric Boersma},
title = {7 Application Security Principles You Need to Know},
howpublished = {\url{https://www.cprime.com/resources/blog/security-by-design-7-principles-you-need-to-know/}},
month = {October},
year = {2020},
annotate = {A blog post outlining 7 security principles which developers should keep in mind to ensure a secure system.}
}

@article{1975-security-design-principles,
title={The protection of information in computer systems},
author={Saltzer, Jerome H and Schroeder, Michael D},
journal={Proceedings of the IEEE},
volume={63},
number={9},
pages={1278--1308},
month={September},
year={1975},
publisher={IEEE},
doi={10.1109/PROC.1975.9939},
annotate={Early text which is the first (to my knowledge) to enumerate security design principles.}
}

@inbook{1988-security-design-principles,
title={Building a Secure Computer System},
author={Gasser, Morrie},
month={January},
year={1988},
publisher={Van Nostrand Reinhold Company},
isbn={9780442230227},
pages={35--44},
annotate={Another early text which enumerates a collection of security design principles.}
}

@inbook{2001-security-design-principles,
title={Building Secure Software: How to Avoid Security Problems the Right Way},
author={Viega, John and McGraw, Gary R},
month={September},
year={2001},
publisher={Addison-Wesley Professional},
isbn={9780672334092},
pages={91--113},
annotate={A more recent text that also enumerates a number of security design principles.}
}

@inbook{death-taxes-and-failure,
title={Security Principles To Live By},
author={Howard, Michael and LeBlanc, David},
booktitle={Writing Secure Code},
month={December},
year={2002},
isbn={0735617228},
pages={64},
publisher={Microsoft Press Redmond, Wash.},
annotate={Source contains an excellent quote on the principle of failing securely ``Death, taxes, and computer system failure are all inevitable to some degree. Plan for the event.''}
}

@misc{failing-securely,
author = {Gegick, Michael and Barnum, Sean},
title = {Failing Securely},
howpublished = {\url{https://www.cisa.gov/uscert/bsi/articles/knowledge/principles/failing-securely}},
month = {December},
year = {2005},
publisher = {Cybersecurity \& Infrastructure Security Agency},
annotate = {A page with a collation of relevant expert opinions on failing securely.}
}

@misc{facebook-outage,
author = {Santosh Janardhan},
title = {More details about the {October} 4 outage},
howpublished = {\url{https://engineering.fb.com/2021/10/05/networking-traffic/outage-details/}},
month = {October},
year = {2021},
annotate = {A Facebook engineering blog post which explains the cause of an outage and the subsequent challenges caused by failing securely}
}

@article{shannons-maxim,
author={Shannon, C. E.},
journal={The Bell System Technical Journal},
title={Communication theory of secrecy systems},
year={1949},
volume={28},
number={4},
pages={656-715},
doi={10.1002/j.1538-7305.1949.tb00928.x}
}

@misc{password-security,
author = {Sam Manjarres},
title = {2021 World Password Day: How Many Will Be Stolen This Year?},
howpublished = {\url{https://www.secplicity.org/2021/05/04/2021-world-password-day-how-many-will-be-stolen-this-year/}},
month = {May},
year = {2021},
annotate = {A number of hopefully alarming facts about password theft and cracking in 2021.}
}

@article{least-privilege,
author = {Saltzer, Jerome H.},
title = {Protection and the Control of Information Sharing in Multics},
year = {1974},
issue_date = {July 1974},
publisher = {Association for Computing Machinery},
volume = {17},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/361011.361067},
doi = {10.1145/361011.361067},
journal = {Communications of the ACM},
month = {July},
pages = {388-402},
numpages = {15},
annotate = {The article where Saltzer coined the principle of least priviledge, one of the foundations of security design principles.}
}

// Layered Architecture notes
@article{ballofmud,
  title={Big ball of mud},
  author={Foote, Brian and Yoder, Joseph},
  journal={Pattern languages of program design},
  volume={4},
  pages={654--692},
  year={1997},
  annotate={The source for the term `big ball of mud`}
}

// Docker notes
@misc{static-hello-world,
author = {henszey},
title = {Smallest x86 {ELF} Hello World},
howpublished = {\url{http://timelessname.com/elfbin/}},
month = {},
year = {},
annotate = {A small article which investigates the creation of a small statically linked hello world program.}
}

@misc{docker-from-scratch,
author = {Changhui Xu},
title = {Docker: FROM scratch},
howpublished = {\url{https://codeburst.io/docker-from-scratch-2a84552470c8}},
month = {July},
year = {2020},
annotate = {An article detailing the process required for running a statically linked hello world program in the scratch docker environment.}
}
